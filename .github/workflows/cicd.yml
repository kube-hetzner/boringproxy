name: CI/CD

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,arm

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: |-
            linux/amd64
            linux/arm64
            linux/arm/v7

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write

    if: startsWith(github.ref, 'refs/tags/')

    env:
      ARCHITECTURES: |-
        amd64
        arm64
        arm/v7

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Pull and save Docker images for all architectures
        run: |
          for arch in $ARCHITECTURES; do
            echo "Processing architecture: $arch"
            arch_suffix=$(echo $arch | tr '/' '-')  # Replace '/' with '-' for file naming
            image_tag="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}"
            
            docker pull --platform linux/$arch $image_tag
            docker save -o boringproxy-airgap-image-$arch_suffix.tar $image_tag
            gzip -9 -k boringproxy-airgap-image-$arch_suffix.tar
            zstd -19 -k boringproxy-airgap-image-$arch_suffix.tar
          done

      - name: Upload compressed archives to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            boringproxy-airgap-image-*.tar.gz
            boringproxy-airgap-image-*.tar.zst
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
