name: CI/CD

on:
  pull_request:
    branches: ["*"]
  push:
    branches: ["main"]
    tags: ["v*.*.*"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64,arm

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: |-
            linux/amd64
            linux/arm64
            linux/arm/v7

      - name: Save locally built Docker image as tar
        run: |-
          docker save -o image.tar ${{ steps.meta.outputs.tags }}

      - name: Compress tar with gzip
        run: gzip -9 image.tar

      - name: Compress tar with zstd
        run: |-
          sudo apt-get install -y zstd
          zstd -19 image.tar.gz

      - name: Create release (if tagged)
        if: startsWith(github.ref, 'refs/tags/')
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload gzipped tar to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ steps.create_release.outputs.id }}
          asset_path: ./image.tar.gz
          asset_name: image.tar.gz
          asset_content_type: application/gzip

      - name: Upload zstd-compressed tar to release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          release_id: ${{ steps.create_release.outputs.id }}
          asset_path: ./image.tar.gz.zst
          asset_name: image.tar.zst
          asset_content_type: application/zstd
